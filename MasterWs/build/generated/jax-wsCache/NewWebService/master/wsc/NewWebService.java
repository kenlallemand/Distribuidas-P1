
package master.wsc;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140803.1500
 * Generated source version: 2.2
 * 
 */
@WebService(name = "NewWebService", targetNamespace = "http://ws/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface NewWebService {


    /**
     * 
     * @param fileP
     * @param buff
     * @param narch
     * @return
     *     returns byte[]
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getBytes", targetNamespace = "http://ws/", className = "master.wsc.GetBytes")
    @ResponseWrapper(localName = "getBytesResponse", targetNamespace = "http://ws/", className = "master.wsc.GetBytesResponse")
    @Action(input = "http://ws/NewWebService/getBytesRequest", output = "http://ws/NewWebService/getBytesResponse")
    public byte[] getBytes(
        @WebParam(name = "narch", targetNamespace = "")
        String narch,
        @WebParam(name = "buff", targetNamespace = "")
        int buff,
        @WebParam(name = "fileP", targetNamespace = "")
        long fileP);

    /**
     * 
     * @param filename
     * @return
     *     returns long
     */
    @WebMethod(operationName = "GetTama\u00f1o")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetTama\u00f1o", targetNamespace = "http://ws/", className = "master.wsc.GetTama\u00f1o")
    @ResponseWrapper(localName = "GetTama\u00f1oResponse", targetNamespace = "http://ws/", className = "master.wsc.GetTama\u00f1oResponse")
    @Action(input = "http://ws/NewWebService/GetTama\u00f1oRequest", output = "http://ws/NewWebService/GetTama\u00f1oResponse")
    public long getTama√±o(
        @WebParam(name = "Filename", targetNamespace = "")
        String filename);

    /**
     * 
     * @param file
     * @return
     *     returns byte[]
     */
    @WebMethod(operationName = "GetArch")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetArch", targetNamespace = "http://ws/", className = "master.wsc.GetArch")
    @ResponseWrapper(localName = "GetArchResponse", targetNamespace = "http://ws/", className = "master.wsc.GetArchResponse")
    @Action(input = "http://ws/NewWebService/GetArchRequest", output = "http://ws/NewWebService/GetArchResponse")
    public byte[] getArch(
        @WebParam(name = "file", targetNamespace = "")
        String file);

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod(operationName = "GetFileNameList")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetFileNameList", targetNamespace = "http://ws/", className = "master.wsc.GetFileNameList")
    @ResponseWrapper(localName = "GetFileNameListResponse", targetNamespace = "http://ws/", className = "master.wsc.GetFileNameListResponse")
    @Action(input = "http://ws/NewWebService/GetFileNameListRequest", output = "http://ws/NewWebService/GetFileNameListResponse")
    public List<String> getFileNameList();

}

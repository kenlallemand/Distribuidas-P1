
package master.ws;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "MasterWs", targetNamespace = "http://ws.master/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface MasterWs {


    /**
     * 
     * @param id
     * @return
     *     returns java.util.List<java.lang.Object>
     */
    @WebMethod(operationName = "Getfilelist")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "Getfilelist", targetNamespace = "http://ws.master/", className = "master.ws.Getfilelist")
    @ResponseWrapper(localName = "GetfilelistResponse", targetNamespace = "http://ws.master/", className = "master.ws.GetfilelistResponse")
    @Action(input = "http://ws.master/MasterWs/GetfilelistRequest", output = "http://ws.master/MasterWs/GetfilelistResponse")
    public List<Object> getfilelist(
        @WebParam(name = "ID", targetNamespace = "")
        String id);

    /**
     * 
     * @return
     *     returns java.util.List<master.ws.Serverinfo>
     */
    @WebMethod(operationName = "GetInfo")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetInfo", targetNamespace = "http://ws.master/", className = "master.ws.GetInfo")
    @ResponseWrapper(localName = "GetInfoResponse", targetNamespace = "http://ws.master/", className = "master.ws.GetInfoResponse")
    @Action(input = "http://ws.master/MasterWs/GetInfoRequest", output = "http://ws.master/MasterWs/GetInfoResponse")
    public List<Serverinfo> getInfo();

    /**
     * 
     * @param id
     * @param narch
     * @return
     *     returns byte[]
     */
    @WebMethod(operationName = "GetArchivo")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetArchivo", targetNamespace = "http://ws.master/", className = "master.ws.GetArchivo")
    @ResponseWrapper(localName = "GetArchivoResponse", targetNamespace = "http://ws.master/", className = "master.ws.GetArchivoResponse")
    @Action(input = "http://ws.master/MasterWs/GetArchivoRequest", output = "http://ws.master/MasterWs/GetArchivoResponse")
    public byte[] getArchivo(
        @WebParam(name = "ID", targetNamespace = "")
        String id,
        @WebParam(name = "narch", targetNamespace = "")
        String narch);

    /**
     * 
     * @param id
     * @param narch
     * @return
     *     returns long
     */
    @WebMethod(operationName = "GetTam")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetTam", targetNamespace = "http://ws.master/", className = "master.ws.GetTam")
    @ResponseWrapper(localName = "GetTamResponse", targetNamespace = "http://ws.master/", className = "master.ws.GetTamResponse")
    @Action(input = "http://ws.master/MasterWs/GetTamRequest", output = "http://ws.master/MasterWs/GetTamResponse")
    public long getTam(
        @WebParam(name = "ID", targetNamespace = "")
        String id,
        @WebParam(name = "narch", targetNamespace = "")
        String narch);

    /**
     * 
     * @param fileP
     * @param id
     * @param buff
     * @param narch
     * @return
     *     returns byte[]
     */
    @WebMethod(operationName = "GetByte")
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "GetByte", targetNamespace = "http://ws.master/", className = "master.ws.GetByte")
    @ResponseWrapper(localName = "GetByteResponse", targetNamespace = "http://ws.master/", className = "master.ws.GetByteResponse")
    @Action(input = "http://ws.master/MasterWs/GetByteRequest", output = "http://ws.master/MasterWs/GetByteResponse")
    public byte[] getByte(
        @WebParam(name = "ID", targetNamespace = "")
        String id,
        @WebParam(name = "narch", targetNamespace = "")
        String narch,
        @WebParam(name = "buff", targetNamespace = "")
        int buff,
        @WebParam(name = "FileP", targetNamespace = "")
        long fileP);

}
